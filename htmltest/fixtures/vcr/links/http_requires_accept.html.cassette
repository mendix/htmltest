{
  "Name": "http_requires_accept.html",
  "Tracks": [
    {
      "Request": {
        "Method": "GET",
        "URL": {
          "Scheme": "http",
          "Opaque": "",
          "User": null,
          "Host": "html5doctor.com",
          "Path": "",
          "RawPath": "",
          "ForceQuery": false,
          "RawQuery": "",
          "Fragment": ""
        },
        "Header": {
          "Range": [
            "bytes=0-0"
          ]
        },
        "Body": ""
      },
      "Response": {
        "Status": "403 Forbidden",
        "StatusCode": 403,
        "Proto": "HTTP/1.1",
        "ProtoMajor": 1,
        "ProtoMinor": 1,
        "Header": {
          "Connection": [
            "keep-alive"
          ],
          "Content-Type": [
            "text/html"
          ],
          "Date": [
            "Sat, 27 Jan 2018 18:59:49 GMT"
          ],
          "Server": [
            "nginx"
          ],
          "X-Content-Type-Options": [
            "nosniff"
          ],
          "X-Frame-Options": [
            "SAMEORIGIN"
          ],
          "X-Sucuri-Id": [
            "13010"
          ],
          "X-Xss-Protection": [
            "1; mode=block"
          ]
        },
        "Body": "PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbCI+CjxoZWFkPgo8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLnN1Y3VyaS5uZXQvc3VjdXJpLWZpcmV3YWxsLWJsb2NrLmNzcyIgLz4KPHNlY3Rpb24gY2xhc3M9ImNlbnRlciBjbGVhcmZpeCI+CjxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIiAvPgo8dGl0bGU+U3VjdXJpIFdlYlNpdGUgRmlyZXdhbGwgLSBBY2Nlc3MgRGVuaWVkPC90aXRsZT4KPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2Fuczo0MDAsMzAwLDYwMCw3MDAiIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiPgo8L2hlYWQ+Cjxib2R5Pgo8ZGl2IGlkPSJtYWluLWNvbnRhaW5lciI+CjxoZWFkZXIgY2xhc3M9ImFwcC1oZWFkZXIgY2xlYXJmaXgiPgo8ZGl2IGNsYXNzPSJ3cmFwIj4KPGEgaHJlZj0iaHR0cHM6Ly93d3cuc3VjdXJpLm5ldC8iIGNsYXNzPSJsb2dvIj48L2E+CjxzcGFuIGNsYXNzPSJsb2dvLW5lYXJ0ZXh0Ij5XZWJzaXRlIEZpcmV3YWxsPC9zcGFuPgo8YSBocmVmPSJodHRwczovL3N1Y3VyaS5uZXQiIGNsYXNzPSJzaXRlLWxpbmsiPkJhY2sgdG8gc3VjdXJpLm5ldDwvYT4KPC9kaXY+CjwvaGVhZGVyPgoKPHNlY3Rpb24gY2xhc3M9ImFwcC1jb250ZW50IGFjY2Vzcy1kZW5pZWQgY2xlYXJmaXgiPjxkaXYgY2xhc3M9ImJveCBjZW50ZXIgd2lkdGgtbWF4LTk0MCI+PGgxIGNsYXNzPSJicmFuZC1mb250IGZvbnQtc2l6ZS14dHJhIG5vLW1hcmdpbiI+PGkgY2xhc3M9Imljb24tY2lyY2xlLXJlZCI+PC9pPkFjY2VzcyBEZW5pZWQgLSBTdWN1cmkgV2Vic2l0ZSBGaXJld2FsbDwvaDE+CjxwIGNsYXNzPSJtZWRpdW0tdGV4dCBjb2RlLXNuaXBwZXQiPklmIHlvdSBhcmUgdGhlIHNpdGUgb3duZXIgKG9yIHlvdSBtYW5hZ2UgdGhpcyBzaXRlKSwgcGxlYXNlIHdoaXRlbGlzdCB5b3VyIElQIG9yIGlmIHlvdSB0aGluayB0aGlzIGJsb2NrIGlzIGFuIGVycm9yIHBsZWFzZSA8YSBocmVmPSJodHRwczovL3N1cHBvcnQuc3VjdXJpLm5ldCIgY2xhc3M9ImNvbG9yLWdyZWVuIHVuZGVybGluZSI+b3BlbiBhIHN1cHBvcnQgdGlja2V0PC9hPiBhbmQgbWFrZSBzdXJlIHRvIGluY2x1ZGUgdGhlIGJsb2NrIGRldGFpbHMgKGRpc3BsYXllZCBpbiB0aGUgYm94IGJlbG93KSwgc28gd2UgY2FuIGFzc2lzdCB5b3UgaW4gdHJvdWJsZXNob290aW5nIHRoZSBpc3N1ZS4gPC9wPjxoMj5CbG9jayBkZXRhaWxzOjwvaDE+Cjx0YWJsZSBjbGFzcz0icHJvcGVydHktdGFibGUgb3ZlcmZsb3ctYnJlYWstYWxsIGxpbmUtaGVpZ2h0LTE2Ij4KPHRyPgo8dGQ+WW91ciBJUDo8L3RkPgo8dGQ+PHNwYW4+OTIuMTYuODkuMTgyPC9zcGFuPjwvdGQ+CjwvdHI+Cjx0cj48dGQ+VVJMOjwvdGQ+Cjx0ZD48c3Bhbj5odG1sNWRvY3Rvci5jb20vPC9zcGFuPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPllvdXIgQnJvd3NlcjogPC90ZD4KPHRkPjxzcGFuPkdvLWh0dHAtY2xpZW50LzEuMTwvc3Bhbj48L3RkPgo8L3RyPgo8dHI+PHRkPkJsb2NrIElEOjwvdGQ+Cjx0ZD48c3Bhbj5ERE9TMjI8L3NwYW4+PC90ZD4KPC90cj4KPHRyPgo8dGQ+QmxvY2sgcmVhc29uOjwvdGQ+Cjx0ZD48c3Bhbj5ERE9TIGF0dGVtcHQgd2FzIGJsb2NrZWQuPC9zcGFuPjwvdGQ+CjwvdHI+Cjx0cj4KPHRkPlRpbWU6PC90ZD4KPHRkPjxzcGFuPlNhdCBKYW4gMjcgMTM6NTk6NDkgMjAxODwvc3Bhbj48L3RkPgo8L3RyPgo8dHI+Cjx0ZD5TZXJ2ZXIgSUQ6PC90ZD4KPHRkPjxzcGFuPjEzMDEwPC9zcGFuPjwvdGQ+PC90cj4KPC90YWJsZT4KPC9kaXY+Cjwvc2VjdGlvbj4KCjxmb290ZXI+CjxzcGFuPiZjb3B5OyAyMDE3IFN1Y3VyaSBJbmMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuPC9zcGFuPgo8c3BhbiBpZD0icHJpdmFjeS1wb2xpY3kiPjxhIGhyZWY9Imh0dHBzOi8vc3VjdXJpLm5ldC9wcml2YWN5LXBvbGljeSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9mb2xsb3cgbm9vcGVuZXIiPlByaXZhY3k8L2E+PC9zcGFuPgo8L2Zvb3Rlcj4KPC9kaXY+CjwvYm9keT4KPC9odG1sPgoK",
        "ContentLength": -1,
        "TransferEncoding": [
          "chunked"
        ],
        "Trailer": null,
        "TLS": null
      },
      "ErrType": "",
      "ErrMsg": ""
    },
    {
      "Request": {
        "Method": "GET",
        "URL": {
          "Scheme": "http",
          "Opaque": "",
          "User": null,
          "Host": "html5doctor.com",
          "Path": "",
          "RawPath": "",
          "ForceQuery": false,
          "RawQuery": "",
          "Fragment": ""
        },
        "Header": {
          "Accept": [
            "*/*"
          ],
          "Range": [
            "bytes=0-0"
          ]
        },
        "Body": ""
      },
      "Response": {
        "Status": "200 OK",
        "StatusCode": 200,
        "Proto": "HTTP/1.1",
        "ProtoMajor": 1,
        "ProtoMinor": 1,
        "Header": {
          "Connection": [
            "keep-alive"
          ],
          "Content-Type": [
            "text/html; charset=UTF-8"
          ],
          "Date": [
            "Sat, 27 Jan 2018 19:00:23 GMT"
          ],
          "Link": [
            "\u003chttp://html5doctor.com/wp-json/\u003e; rel=\"https://api.w.org/\""
          ],
          "Server": [
            "nginx"
          ],
          "Vary": [
            "Cookie"
          ],
          "X-Content-Type-Options": [
            "nosniff"
          ],
          "X-Frame-Options": [
            "SAMEORIGIN"
          ],
          "X-Sucuri-Cache": [
            "UPDATING"
          ],
          "X-Sucuri-Id": [
            "13010"
          ],
          "X-Xss-Protection": [
            "1; mode=block"
          ]
        },
        "Body": "",
        "ContentLength": -1,
        "TransferEncoding": [
          "chunked"
        ],
        "Trailer": null,
        "TLS": null
      },
      "ErrType": "",
      "ErrMsg": ""
    },
    {
      "Request": {
        "Method": "GET",
        "URL": {
          "Scheme": "http",
          "Opaque": "",
          "User": null,
          "Host": "html5doctor.com",
          "Path": "",
          "RawPath": "",
          "ForceQuery": false,
          "RawQuery": "",
          "Fragment": ""
        },
        "Header": {
          "Accept": [
            "*/*"
          ],
          "Range": [
            "bytes=0-0"
          ],
          "User-Agent": [
            "htmltest/"
          ]
        },
        "Body": ""
      },
      "Response": {
        "Status": "200 OK",
        "StatusCode": 200,
        "Proto": "HTTP/1.1",
        "ProtoMajor": 1,
        "ProtoMinor": 1,
        "Header": {
          "Connection": [
            "keep-alive"
          ],
          "Content-Type": [
            "text/html; charset=UTF-8"
          ],
          "Date": [
            "Sat, 27 Jan 2018 21:49:38 GMT"
          ],
          "Link": [
            "\u003chttp://html5doctor.com/wp-json/\u003e; rel=\"https://api.w.org/\""
          ],
          "Server": [
            "nginx"
          ],
          "Vary": [
            "Cookie"
          ],
          "X-Content-Type-Options": [
            "nosniff"
          ],
          "X-Frame-Options": [
            "SAMEORIGIN"
          ],
          "X-Sucuri-Cache": [
            "UPDATING"
          ],
          "X-Sucuri-Id": [
            "13010"
          ],
          "X-Xss-Protection": [
            "1; mode=block"
          ]
        },
        "Body": "PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCiAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCIgLz4NCiAgICA8dGl0bGU+DQoJCUhUTUw1IERvY3RvciwgaGVscGluZyB5b3UgaW1wbGVtZW50IEhUTUw1IHRvZGF5ICAgIDwvdGl0bGU+DQogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2h0bWw1ZG9jdG9yMi9zdHlsZS5jc3MiIG1lZGlhPSJzY3JlZW4iIC8+DQogICAgPCEtLVtpZiBJRV0+DQogICAgPHNjcmlwdCBzcmM9Imh0dHA6Ly9odG1sNXNoaXYuZ29vZ2xlY29kZS5jb20vc3ZuL3RydW5rL2h0bWw1LmpzIj48L3NjcmlwdD4NCiAgICA8IVtlbmRpZl0tLT4NCjxsaW5rIHJlbD0nZG5zLXByZWZldGNoJyBocmVmPScvL3Mudy5vcmcnIC8+CjxsaW5rIHJlbD0iYWx0ZXJuYXRlIiB0eXBlPSJhcHBsaWNhdGlvbi9yc3MreG1sIiB0aXRsZT0iSFRNTDUgRG9jdG9yICZyYXF1bzsgRmVlZCIgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9mZWVkLyIgLz4KPGxpbmsgcmVsPSJhbHRlcm5hdGUiIHR5cGU9ImFwcGxpY2F0aW9uL3Jzcyt4bWwiIHRpdGxlPSJIVE1MNSBEb2N0b3IgJnJhcXVvOyBDb21tZW50cyBGZWVkIiBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL2NvbW1lbnRzL2ZlZWQvIiAvPgoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KCQkJd2luZG93Ll93cGVtb2ppU2V0dGluZ3MgPSB7ImJhc2VVcmwiOiJodHRwczpcL1wvcy53Lm9yZ1wvaW1hZ2VzXC9jb3JlXC9lbW9qaVwvMi4yLjFcLzcyeDcyXC8iLCJleHQiOiIucG5nIiwic3ZnVXJsIjoiaHR0cHM6XC9cL3Mudy5vcmdcL2ltYWdlc1wvY29yZVwvZW1vamlcLzIuMi4xXC9zdmdcLyIsInN2Z0V4dCI6Ii5zdmciLCJzb3VyY2UiOnsiY29uY2F0ZW1vamkiOiJodHRwOlwvXC9odG1sNWRvY3Rvci5jb21cL3dwLWluY2x1ZGVzXC9qc1wvd3AtZW1vamktcmVsZWFzZS5taW4uanM/dmVyPTQuNy42In19OwoJCQkhZnVuY3Rpb24oYSxiLGMpe2Z1bmN0aW9uIGQoYSl7dmFyIGIsYyxkLGUsZj1TdHJpbmcuZnJvbUNoYXJDb2RlO2lmKCFrfHwhay5maWxsVGV4dClyZXR1cm4hMTtzd2l0Y2goay5jbGVhclJlY3QoMCwwLGoud2lkdGgsai5oZWlnaHQpLGsudGV4dEJhc2VsaW5lPSJ0b3AiLGsuZm9udD0iNjAwIDMycHggQXJpYWwiLGEpe2Nhc2UiZmxhZyI6cmV0dXJuIGsuZmlsbFRleHQoZig1NTM1Niw1NjgyNiw1NTM1Niw1NjgxOSksMCwwKSwhKGoudG9EYXRhVVJMKCkubGVuZ3RoPDNlMykmJihrLmNsZWFyUmVjdCgwLDAsai53aWR0aCxqLmhlaWdodCksay5maWxsVGV4dChmKDU1MzU2LDU3MzMxLDY1MDM5LDgyMDUsNTUzNTYsNTcwOTYpLDAsMCksYj1qLnRvRGF0YVVSTCgpLGsuY2xlYXJSZWN0KDAsMCxqLndpZHRoLGouaGVpZ2h0KSxrLmZpbGxUZXh0KGYoNTUzNTYsNTczMzEsNTUzNTYsNTcwOTYpLDAsMCksYz1qLnRvRGF0YVVSTCgpLGIhPT1jKTtjYXNlImVtb2ppNCI6cmV0dXJuIGsuZmlsbFRleHQoZig1NTM1Nyw1NjQyNSw1NTM1Niw1NzM0MSw4MjA1LDU1MzU3LDU2NTA3KSwwLDApLGQ9ai50b0RhdGFVUkwoKSxrLmNsZWFyUmVjdCgwLDAsai53aWR0aCxqLmhlaWdodCksay5maWxsVGV4dChmKDU1MzU3LDU2NDI1LDU1MzU2LDU3MzQxLDU1MzU3LDU2NTA3KSwwLDApLGU9ai50b0RhdGFVUkwoKSxkIT09ZX1yZXR1cm4hMX1mdW5jdGlvbiBlKGEpe3ZhciBjPWIuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7Yy5zcmM9YSxjLmRlZmVyPWMudHlwZT0idGV4dC9qYXZhc2NyaXB0IixiLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJoZWFkIilbMF0uYXBwZW5kQ2hpbGQoYyl9dmFyIGYsZyxoLGksaj1iLmNyZWF0ZUVsZW1lbnQoImNhbnZhcyIpLGs9ai5nZXRDb250ZXh0JiZqLmdldENvbnRleHQoIjJkIik7Zm9yKGk9QXJyYXkoImZsYWciLCJlbW9qaTQiKSxjLnN1cHBvcnRzPXtldmVyeXRoaW5nOiEwLGV2ZXJ5dGhpbmdFeGNlcHRGbGFnOiEwfSxoPTA7aDxpLmxlbmd0aDtoKyspYy5zdXBwb3J0c1tpW2hdXT1kKGlbaF0pLGMuc3VwcG9ydHMuZXZlcnl0aGluZz1jLnN1cHBvcnRzLmV2ZXJ5dGhpbmcmJmMuc3VwcG9ydHNbaVtoXV0sImZsYWciIT09aVtoXSYmKGMuc3VwcG9ydHMuZXZlcnl0aGluZ0V4Y2VwdEZsYWc9Yy5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZyYmYy5zdXBwb3J0c1tpW2hdXSk7Yy5zdXBwb3J0cy5ldmVyeXRoaW5nRXhjZXB0RmxhZz1jLnN1cHBvcnRzLmV2ZXJ5dGhpbmdFeGNlcHRGbGFnJiYhYy5zdXBwb3J0cy5mbGFnLGMuRE9NUmVhZHk9ITEsYy5yZWFkeUNhbGxiYWNrPWZ1bmN0aW9uKCl7Yy5ET01SZWFkeT0hMH0sYy5zdXBwb3J0cy5ldmVyeXRoaW5nfHwoZz1mdW5jdGlvbigpe2MucmVhZHlDYWxsYmFjaygpfSxiLmFkZEV2ZW50TGlzdGVuZXI/KGIuYWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsZywhMSksYS5hZGRFdmVudExpc3RlbmVyKCJsb2FkIixnLCExKSk6KGEuYXR0YWNoRXZlbnQoIm9ubG9hZCIsZyksYi5hdHRhY2hFdmVudCgib25yZWFkeXN0YXRlY2hhbmdlIixmdW5jdGlvbigpeyJjb21wbGV0ZSI9PT1iLnJlYWR5U3RhdGUmJmMucmVhZHlDYWxsYmFjaygpfSkpLGY9Yy5zb3VyY2V8fHt9LGYuY29uY2F0ZW1vamk/ZShmLmNvbmNhdGVtb2ppKTpmLndwZW1vamkmJmYudHdlbW9qaSYmKGUoZi50d2Vtb2ppKSxlKGYud3BlbW9qaSkpKX0od2luZG93LGRvY3VtZW50LHdpbmRvdy5fd3BlbW9qaVNldHRpbmdzKTsKCQk8L3NjcmlwdD4KCQk8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgppbWcud3Atc21pbGV5LAppbWcuZW1vamkgewoJZGlzcGxheTogaW5saW5lICFpbXBvcnRhbnQ7Cglib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKCWJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDsKCWhlaWdodDogMWVtICFpbXBvcnRhbnQ7Cgl3aWR0aDogMWVtICFpbXBvcnRhbnQ7CgltYXJnaW46IDAgLjA3ZW0gIWltcG9ydGFudDsKCXZlcnRpY2FsLWFsaWduOiAtMC4xZW0gIWltcG9ydGFudDsKCWJhY2tncm91bmQ6IG5vbmUgIWltcG9ydGFudDsKCXBhZGRpbmc6IDAgIWltcG9ydGFudDsKfQo8L3N0eWxlPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdjb250YWN0LWZvcm0tNy1jc3MnICBocmVmPSdodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9jb250YWN0LWZvcm0tNy9pbmNsdWRlcy9jc3Mvc3R5bGVzLmNzcz92ZXI9My41LjMnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8bGluayByZWw9J3N0eWxlc2hlZXQnIGlkPSdjcnBfbGlzdF9zdHlsZS1jc3MnICBocmVmPSdodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvcGx1Z2lucy9jb250ZXh0dWFsLXJlbGF0ZWQtcG9zdHMvY3NzL2RlZmF1bHQtc3R5bGUuY3NzP3Zlcj00LjcuNicgdHlwZT0ndGV4dC9jc3MnIG1lZGlhPSdhbGwnIC8+CjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgaWQ9J3dwLXBhZ2VuYXZpLWNzcycgIGhyZWY9J2h0dHA6Ly9odG1sNWRvY3Rvci5jb20vd3AtY29udGVudC9wbHVnaW5zL3dwLXBhZ2VuYXZpL3BhZ2VuYXZpLWNzcy5jc3M/dmVyPTIuNzAnIHR5cGU9J3RleHQvY3NzJyBtZWRpYT0nYWxsJyAvPgo8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCcgc3JjPSdodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWluY2x1ZGVzL2pzL2pxdWVyeS9qcXVlcnkuanM/dmVyPTEuMTIuNCc+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0JyBzcmM9J2h0dHA6Ly9odG1sNWRvY3Rvci5jb20vd3AtaW5jbHVkZXMvanMvanF1ZXJ5L2pxdWVyeS1taWdyYXRlLm1pbi5qcz92ZXI9MS40LjEnPjwvc2NyaXB0Pgo8bGluayByZWw9J2h0dHBzOi8vYXBpLncub3JnLycgaHJlZj0naHR0cDovL2h0bWw1ZG9jdG9yLmNvbS93cC1qc29uLycgLz4KPGxpbmsgcmVsPSJFZGl0VVJJIiB0eXBlPSJhcHBsaWNhdGlvbi9yc2QreG1sIiB0aXRsZT0iUlNEIiBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3htbHJwYy5waHA/cnNkIiAvPgoJCTxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+LnJlY2VudGNvbW1lbnRzIGF7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudDtwYWRkaW5nOjAgIWltcG9ydGFudDttYXJnaW46MCAhaW1wb3J0YW50O308L3N0eWxlPgoJCQ0KCSAgDQogIA0KCTxtZXRhIG5hbWU9Imdvb2dsZS1zaXRlLXZlcmlmaWNhdGlvbiIgY29udGVudD0iZU5GZ1hvQVRpWXhrWkdLZW4wU2h3d1RGLUJDNTExVmpwOHg3UVREZUEzNCIgLz4NCjwvaGVhZD4NCjxib2R5IGNsYXNzPSJob21lIGJsb2ciIGlkPSJjb20taHRtbDVkb2N0b3IiPg0KPGhlYWRlciByb2xlPSJiYW5uZXIiPg0KICAgIDxkaXYgY2xhc3M9ImlubmVyIGdyb3VwIj4NCiAgICA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tIiByZWw9ImhvbWUiPjxkaXY+DQogICAgICAgIDxkaXYgY2xhc3M9ImxvZ28iPg0KICAgICAgICA8aDE+SFRNTDUgRG9jdG9yPC9oMT4NCiAgICAgICAgPGgyPkhlbHBpbmcgeW91IGltcGxlbWVudCBIVE1MNSB0b2RheTwvaDI+DQogICAgICAgIDwvZGl2PjwhLS0gZW5kIGxvZ28gLS0+DQogICAgPC9kaXY+PC9hPjwhLS0gd3JhcHBlciBkaXYgZm9yIEZpcmVmb3ggMy54IHJlZjogaHR0cDovLzAxaS5qcC9odG1sNWJsbCAtLT4NCg0KIAk8dWwgaWQ9Im1lbnUtdG9wLW5hdiIgY2xhc3M9InNlbWFudGljLWxpc3QiPjxsaSBpZD0ibWVudS1pdGVtLTMyNzIiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtcG9zdF90eXBlIG1lbnUtaXRlbS1vYmplY3QtcGFnZSBtZW51LWl0ZW0taG9tZSBtZW51LWl0ZW0tMzI3MiI+PGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9hYm91dC8iPkFib3V0PC9hPjwvbGk+CjxsaSBpZD0ibWVudS1pdGVtLTMyNzUiIGNsYXNzPSJtZW51LWl0ZW0gbWVudS1pdGVtLXR5cGUtY3VzdG9tIG1lbnUtaXRlbS1vYmplY3QtY3VzdG9tIG1lbnUtaXRlbS0zMjc1Ij48YSBocmVmPSJodHRwOi8vZmVlZHMyLmZlZWRidXJuZXIuY29tL2h0bWw1ZG9jdG9yIj5SU1M8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMzI3NiIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gbWVudS1pdGVtLTMyNzYiPjxhIGhyZWY9Imh0dHA6Ly9mZWVkcy5mZWVkYnVybmVyLmNvbS9IVE1MNURvY3RvckNvbW1lbnRzIj5Db21tZW50cyBSU1M8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMzI1MyIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gbWVudS1pdGVtLWhhcy1jaGlsZHJlbiBtZW51LWl0ZW0tMzI1MyI+PGEgaHJlZj0iIyI+RG9jdG9yIE5ldHdvcms8L2E+Cjx1bCBjbGFzcz0ic3ViLW1lbnUiPgoJPGxpIGlkPSJtZW51LWl0ZW0tMzI3MyIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gbWVudS1pdGVtLTMyNzMiPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWdhbGxlcnkuY29tIj5IVE1MNSBHYWxsZXJ5PC9hPjwvbGk+Cgk8bGkgaWQ9Im1lbnUtaXRlbS0zNTgwIiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLWN1c3RvbSBtZW51LWl0ZW0tb2JqZWN0LWN1c3RvbSBtZW51LWl0ZW0tMzU4MCI+PGEgaHJlZj0iaHR0cDovL2RvY3RldXJodG1sNS5jb20vaHRtbDUvIj5Eb2N0ZXVyIEhUTUw1PC9hPjwvbGk+Cgk8bGkgaWQ9Im1lbnUtaXRlbS0zOTczIiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLWN1c3RvbSBtZW51LWl0ZW0tb2JqZWN0LWN1c3RvbSBtZW51LWl0ZW0tMzk3MyI+PGEgaHJlZj0iaHR0cHM6Ly9naXRodWIuY29tL2h0bWw1ZG9jdG9yLyI+SFRNTDUgRG9jdG9yIG9uIEdpdGh1YjwvYT48L2xpPgo8L3VsPgo8L2xpPgo8L3VsPiAgICAgIDwhLS0gZW5kICN0b3AtbmF2IC0tPg0KICAgIA0KICAgIDxuYXY+DQoJCTx1bCBpZD0ibWVudS1tYWluX25hdiIgY2xhc3M9IiI+PGxpIGlkPSJtZW51LWl0ZW0tMzI5NyIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1jdXN0b20gbWVudS1pdGVtLW9iamVjdC1jdXN0b20gY3VycmVudC1tZW51LWl0ZW0gY3VycmVudF9wYWdlX2l0ZW0gbWVudS1pdGVtLTMyOTciPjxhIGhyZWY9Ii8iPkhvbWU8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMzI1MCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0zMjUwIj48YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL2FydGljbGUtYXJjaGl2ZS8iPkFydGljbGUgQXJjaGl2ZTwvYT48L2xpPgo8bGkgaWQ9Im1lbnUtaXRlbS0zMjkxIiBjbGFzcz0ibWVudS1pdGVtIG1lbnUtaXRlbS10eXBlLXBvc3RfdHlwZSBtZW51LWl0ZW0tb2JqZWN0LXBhZ2UgbWVudS1pdGVtLTMyOTEiPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vZWxlbWVudC1pbmRleC8iPkVsZW1lbnQgSW5kZXg8L2E+PC9saT4KPGxpIGlkPSJtZW51LWl0ZW0tMzk2OCIgY2xhc3M9Im1lbnUtaXRlbSBtZW51LWl0ZW0tdHlwZS1wb3N0X3R5cGUgbWVudS1pdGVtLW9iamVjdC1wYWdlIG1lbnUtaXRlbS0zOTY4Ij48YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3Jlc291cmNlcy8iPlJlc291cmNlczwvYT48L2xpPgo8L3VsPiAgICAJPCEtLSBlbmQgdWwgLS0+DQogICAgCTx1bD4NCiAgICAJCTxsaT48Zm9ybSBpZD0ic2VhcmNoLWZvcm0iIGFjdGlvbj0iL3NlYXJjaC8iIHJvbGU9InNlYXJjaCIgIG1ldGhvZD0iZ2V0Ij4NCiAgICA8ZGl2Pg0KICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJxIiB2YWx1ZT0iIiAvPg0KICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIGlkPSJzZWFyY2gtYnV0dG9uIiB2YWx1ZT0iU2VhcmNoIiAvPg0KICAgIDwvZGl2Pg0KPC9mb3JtPg0KPC9saT4NCiAgICAJPC91bD4NCiAgICAJPCEtLSBlbmQgdWwgLS0+CQ0KICAgIDwvbmF2Pg0KICAgIDwhLS0gZW5kIG5hdiAtLT4NCgk8L2Rpdj4NCgk8IS0tIGVuZCAuaW5uZXIgLS0+DQo8L2hlYWRlcj4NCjwhLS0gZW5kIGhlYWRlciAtLT4NCjxtYWluIGlkPSJjb250ZW50IiBjbGFzcz0iZ3JvdXAiIHJvbGU9Im1haW4iPg0KDQogICAgPGFydGljbGUgaWQ9Im9wZW5lciIgY2xhc3M9Imdyb3VwIj4NCiAgICAgICAgPGRpdiBjbGFzcz0ibWFpbiI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwb3N0Ij4NCiAgICAgICAgICAgICAgICA8aGVhZGVyIGNsYXNzPSJwb3N0LTYwMzAgcG9zdCB0eXBlLXBvc3Qgc3RhdHVzLXB1Ymxpc2ggZm9ybWF0LXN0YW5kYXJkIGhlbnRyeSBjYXRlZ29yeS1hY2Nlc3NpYmlsaXR5IGNhdGVnb3J5LWVsZW1lbnRzIiBpZD0icG9zdC02MDMwIj4NCiAgICAgICAgICAgICAgICAgICAgPGgxPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vY29tcHV0ZXItc2F5cy1uby10by1odG1sNS1kb2N1bWVudC1vdXRsaW5lLyIgcmVsPSJib29rbWFyayIgdGl0bGU9IlBlcm1hbmVudCBMaW5rIHRvIENvbXB1dGVyIHNheXMgTk8gdG8gSFRNTDUgZG9jdW1lbnQgb3V0bGluZSI+Q29tcHV0ZXIgc2F5cyBOTyB0byBIVE1MNSBkb2N1bWVudCBvdXRsaW5lPC9hPjwvaDE+DQogICAgICAgICAgICAgICAgICAgIDxzbWFsbD48dGltZSBkYXRldGltZT0iMjAxNi0wNi0wOSIgcHViZGF0ZT5KdW5lIDl0aCwgMjAxNjwvdGltZT4gYnkgPGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9hdXRob3Ivc3RldmVmLyIgdGl0bGU9IlBvc3RzIGJ5IFN0ZXZlIEZhdWxrbmVyIiByZWw9ImF1dGhvciI+U3RldmUgRmF1bGtuZXI8L2E+Ljwvc21hbGw+DQogICAgICAgICAgICAgICAgPC9oZWFkZXI+DQogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPg0KICAgICAgICAgICAgICAgIDxwPldoYXQgYSBicmlsbGlhbnQgaWRlYSEgRm9yIHRoZSBsb25nZXN0IHRpbWUgSFRNTDUgc3BlY2lmaWVkLCBhbmQgYWR2aXNlZCBkZXZlbG9wZXJzLCB0aGF0IGl0IG5vIGxvbmdlciBtYXR0ZXJlZCB3aGF0IHRoZSBudW1iZXIgKDEgdG8gNikgd2FzIGluIGEgaGVhZGluZyBlbGVtZW50ICh3aGVuIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBzZWN0aW9uaW5nIGVsZW1lbnRzKS4gV2hhdCBtYXR0ZXJlZCB3YXMgdGhlIG5lc3RpbmcgbGV2ZWwgb2YgdGhlIEgxLWg2IGluIHNlY3Rpb25pbmcgZWxlbWVudHMsIGp1c3QgbGlrZSB0aGUgWCZsdDtIJmd0O1RNTCBwcm9taXNlZCBsYW5kLCBidXQgWyZoZWxsaXA7XTwvcD4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJyZWFkLW1vcmUiPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vY29tcHV0ZXItc2F5cy1uby10by1odG1sNS1kb2N1bWVudC1vdXRsaW5lLyI+UmVhZCBmdWxsIHBvc3Q8L2E+PC9wPg0KICAgICAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgICAgICA8L2FydGljbGU+DQogICAgICAgICAgICAgIDwhLS0gZW5kIC5wb3N0IC0tPg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPCEtLSBlbmQgLm1haW4gLS0+DQogICAgICAgICAgICAgICAgDQogICAgICAgIDxhc2lkZSBjbGFzcz0ic2Vjb25kYXJ5Ij4NCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJtb2QiPg0KICAgICAgICAgICAgIDxoMz5SZWNlbnQgQ29tbWVudHM8L2gzPjx1bCBpZD0icmVjZW50Y29tbWVudHMiPjxsaSBjbGFzcz0icmVjZW50Y29tbWVudHMiPjxzcGFuIGNsYXNzPSJjb21tZW50LWF1dGhvci1saW5rIj48YSBocmVmPSdodHRwczovL3d3dy5zdmFjaG9uLmNvbS8nIHJlbD0nZXh0ZXJuYWwgbm9mb2xsb3cnIGNsYXNzPSd1cmwnPlN0ZXZlbiBWYWNob248L2E+PC9zcGFuPiBvbiA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3RoZS1kZXRhaWxzLWFuZC1zdW1tYXJ5LWVsZW1lbnRzLyNjb21tZW50LTIxNjczMzgiPlRoZSBkZXRhaWxzIGFuZCBzdW1tYXJ5IGVsZW1lbnRzPC9hPjwvbGk+PGxpIGNsYXNzPSJyZWNlbnRjb21tZW50cyI+PHNwYW4gY2xhc3M9ImNvbW1lbnQtYXV0aG9yLWxpbmsiPjxhIGhyZWY9J2h0dHBzOi8vd3d3LnhsY3JlYXRpdmUuZGVzaWduLycgcmVsPSdleHRlcm5hbCBub2ZvbGxvdycgY2xhc3M9J3VybCc+TWFyayBFeGNlbGw8L2E+PC9zcGFuPiBvbiA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3RoZS1mb290ZXItZWxlbWVudC11cGRhdGUvI2NvbW1lbnQtMjE1MTY1OSI+VGhlIEZvb3RlciBFbGVtZW50IFVwZGF0ZTwvYT48L2xpPjxsaSBjbGFzcz0icmVjZW50Y29tbWVudHMiPjxzcGFuIGNsYXNzPSJjb21tZW50LWF1dGhvci1saW5rIj5QYXRhbmphbGk8L3NwYW4+IG9uIDxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vY29tcHV0ZXItc2F5cy1uby10by1odG1sNS1kb2N1bWVudC1vdXRsaW5lLyNjb21tZW50LTIxNTA4MDIiPkNvbXB1dGVyIHNheXMgTk8gdG8gSFRNTDUgZG9jdW1lbnQgb3V0bGluZTwvYT48L2xpPjxsaSBjbGFzcz0icmVjZW50Y29tbWVudHMiPjxzcGFuIGNsYXNzPSJjb21tZW50LWF1dGhvci1saW5rIj5QYXRhbmphbGk8L3NwYW4+IG9uIDxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vdGhlLWZpZ3VyZS1maWdjYXB0aW9uLWVsZW1lbnRzLyNjb21tZW50LTIxNTA3ODgiPlRoZSBmaWd1cmUgJiMwMzg7IGZpZ2NhcHRpb24gZWxlbWVudHM8L2E+PC9saT48bGkgY2xhc3M9InJlY2VudGNvbW1lbnRzIj48c3BhbiBjbGFzcz0iY29tbWVudC1hdXRob3ItbGluayI+UGF0YW5qYWxpPC9zcGFuPiBvbiA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL2Jsb2NrcXVvdGUtcS1jaXRlLyNjb21tZW50LTIxNTA3ODEiPlF1b3RpbmcgYW5kIGNpdGluZyB3aXRoIDxjb2RlPiZsdDtibG9ja3F1b3RlJmd0OzwvY29kZT4sIDxjb2RlPiZsdDtxJmd0OzwvY29kZT4sIDxjb2RlPiZsdDtjaXRlJmd0OzwvY29kZT4sIGFuZCB0aGUgY2l0ZSBhdHRyaWJ1dGU8L2E+PC9saT48L3VsPiAgICAgICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgICAgIDwhLS0gZW5kIHNlY3Rpb24gLS0+DQoNCiAgICAgICAgPC9hc2lkZT4NCiAgICAgICAgPCEtLSBlbmQgLnNlY29uZGFyeSAtLT4NCg0KICAgIDwvYXJ0aWNsZT4NCiAgICA8IS0tIGVuZCAjb3BlbmVyIC0tPg0KDQogICAgPHNlY3Rpb24gaWQ9Imdsb3NzYXJ5IiBjbGFzcz0ibXVsdGktdWwgZ2xvc3NhcnkiPg0KICAgICAgICA8aDE+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvIj5IVE1MNSBFbGVtZW50IEluZGV4PC9hPjwvaDE+DQogICAgICAgIDwhLS0gdG9kbzogY29sdW1ucyBzaG91bGQgcmVhbGx5IGJlIGRvbmUgdmlhIGRpdnMgbm90IHNlY3Rpb25zIC0tPg0KICAgICAgICA8c2VjdGlvbiBjbGFzcz0iZ2xvc3NhcnktZmlyc3QiPg0KICAgICAgICAgICAgPCEtLSBoZWFkLCBtZXRhICg0LjEsIDQuMiwgNC4zKSAtLT4NCiAgICAgICAgICAgIDxoMj5IZWFkPC9oMj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iZ3JvdXAiPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNkb2N0eXBlIj5kb2N0eXBlPC9hPjwvbGk+PCEtLSBub3QgYWN0dWFsbHkgaW4gc3BlYyBjaC40IC0tPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNodG1sIj5odG1sPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2hlYWQiPmhlYWQ8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jdGl0bGUiPnRpdGxlPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2Jhc2UiPmJhc2U8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbGluayI+bGluazwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNtZXRhIj5tZXRhPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3N0eWxlIj5zdHlsZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzY3JpcHQiPnNjcmlwdDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNub3NjcmlwdCI+bm9zY3JpcHQ8L2E+PC9saT4NCiAgICAgICAgICAgIDwvdWw+DQogICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgPCEtLSBlbmQgc2VjdGlvbiAtLT4NCiAgICAgICAgPHNlY3Rpb24+DQogICAgICAgICAgICA8IS0tIEhUTUw1IHN0cnVjdHVyYWwgJiBoZWFkZXJzICg0LjQpIC0tPg0KICAgICAgICAgICAgPGgyPlNlY3Rpb25zPC9oMj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iZ3JvdXAiPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNib2R5Ij5ib2R5PC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2FydGljbGUiPmFydGljbGU8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbmF2Ij5uYXY8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYXNpZGUiPmFzaWRlPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3NlY3Rpb24iPnNlY3Rpb248L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jaGVhZGVyIj5oZWFkZXI8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jZm9vdGVyIj5mb290ZXI8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jaDEtaDYiPmgxLWg2PC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI21haW4tZGVzYyI+bWFpbjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNhZGRyZXNzIj5hZGRyZXNzPC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICA8L3NlY3Rpb24+DQogICAgICAgIDwhLS0gZW5kIHNlY3Rpb24gLS0+DQogICAgICAgIDxzZWN0aW9uPg0KICAgICAgICAgICAgPCEtLSBncm91cGluZyBjb250ZW50ICg0LjUpIC0tPg0KICAgICAgICAgICAgPGgyPkdyb3VwaW5nPC9oMj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iZ3JvdXAiPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNwIj5wPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2hyIj5ocjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNwcmUiPnByZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNibG9ja3F1b3RlIj5ibG9ja3F1b3RlPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI29sIj5vbDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyN1bCI+dWw8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbGkiPmxpPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2RsIj5kbCwgZHQsIGRkPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2ZpZ3VyZSI+ZmlndXJlPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2ZpZ2NhcHRpb24iPmZpZ2NhcHRpb248L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jZGl2Ij5kaXY8L2E+PC9saT4NCiAgICAgICAgICAgIDwvdWw+DQogICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgPCEtLSBlbmQgc2VjdGlvbiAtLT4NCiAgICAgICAgPHNlY3Rpb24+DQogICAgICAgICAgICA8IS0tIHRhYmxlcyAoNC45KSAtLT4NCiAgICAgICAgICAgIDxoMj5UYWJsZXM8L2gyPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJncm91cCI+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3RhYmxlIj50YWJsZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNjYXB0aW9uIj5jYXB0aW9uPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3RoZWFkIj50aGVhZDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyN0Ym9keSI+dGJvZHk8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jdGZvb3QiPnRmb290PC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3RyIj50cjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyN0aCI+dGg8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jdGQiPnRkPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2NvbCI+Y29sPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2NvbGdyb3VwIj5jb2xncm91cDwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICA8IS0tIGVuZCBzZWN0aW9uIC0tPg0KICAgICAgICA8c2VjdGlvbj4NCiAgICAgICAgICAgIDwhLS0gZm9ybXMgKDQuMTApIC0tPg0KICAgICAgICAgICAgPGgyPkZvcm1zPC9oMj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iZ3JvdXAiPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNmb3JtMiI+Zm9ybTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNmaWVsZHNldCI+ZmllbGRzZXQ8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbGVnZW5kIj5sZWdlbmQ8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbGFiZWwiPmxhYmVsPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2lucHV0Ij5pbnB1dDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNidXR0b24iPmJ1dHRvbjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzZWxlY3QiPnNlbGVjdDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNkYXRhbGlzdCI+ZGF0YWxpc3Q8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jb3B0Z3JvdXAiPm9wdGdyb3VwPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI29wdGlvbiI+b3B0aW9uPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3RleHRhcmVhIj50ZXh0YXJlYTwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICA8IS0tIGVuZCBzZWN0aW9uIC0tPg0KICAgICAgICA8c2VjdGlvbj4NCiAgICAgICAgICAgIDxoMj5Gb3JtcyAyPC9oMj4NCiAgICAgICAgICAgIDx1bCBjbGFzcz0iZ3JvdXAiPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNrZXlnZW4iPmtleWdlbjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNvdXRwdXQiPm91dHB1dDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNwcm9ncmVzcyI+cHJvZ3Jlc3M8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbWV0ZXIiPm1ldGVyPC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICAgICAgPCEtLSBpbnRlcmFjdGl2ZSBjb250ZW50ICg0LjExKSAtLT4NCiAgICAgICAgICAgIDxoMj5JbnRlcmFjdGl2ZTwvaDI+DQogICAgICAgICAgICA8dWwgY2xhc3M9Imdyb3VwIj4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jZGV0YWlscyI+ZGV0YWlsczwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzdW1tYXJ5Ij5zdW1tYXJ5PC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2NvbW1hbmQiPmNvbW1hbmQ8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbWVudSI+bWVudTwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgICAgIDwhLS0gZWRpdHMgKDQuNykgLS0+DQogICAgICAgICAgICA8aDI+RWRpdHM8L2gyPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJncm91cCI+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2RlbCI+ZGVsLCBpbnM8L2E+PC9saT4NCiAgICAgICAgICAgIDwvdWw+DQogICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgPCEtLSBlbmQgc2VjdGlvbiAtLT4NCiAgICAgICAgPHNlY3Rpb24+DQogICAgICAgICAgICA8IS0tIGVtYmVkZGVkIGNvbnRlbnQgKDQuOCkgLS0+DQogICAgICAgICAgICA8aDI+RW1iZWRkZWQ8L2gyPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJncm91cCI+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2ltZyI+aW1nPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2lmcmFtZSI+aWZyYW1lPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2VtYmVkIj5lbWJlZDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNvYmplY3QiPm9iamVjdDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNwYXJhbSI+cGFyYW08L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jdmlkZW8iPnZpZGVvPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI2F1ZGlvIj5hdWRpbzwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzb3VyY2UiPnNvdXJjZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNjYW52YXMiPmNhbnZhczwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyN0cmFjayI+dHJhY2s8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jbWFwIj5tYXA8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYXJlYSI+YXJlYTwvYT48L2xpPg0KICAgICAgICAgICAgPC91bD4NCiAgICAgICAgPC9zZWN0aW9uPg0KICAgICAgICA8IS0tIGVuZCBzZWN0aW9uIC0tPg0KICAgICAgICA8c2VjdGlvbj4NCiAgICAgICAgICAgIDwhLS0gdGV4dC1sZXZlbCBzZW1hbnRpY3MgKDQuNikgLS0+DQogICAgICAgICAgICA8aDI+VGV4dC1sZXZlbDwvaDI+DQogICAgICAgICAgICA8dWwgY2xhc3M9Imdyb3VwIj4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYSI+YTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNlbSI+ZW08L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jc3Ryb25nIj5zdHJvbmc8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jaSI+aSwgYjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyN1LWRlZiI+dTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzIj5zPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3NtYWxsIj5zbWFsbDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNhYmJyIj5hYmJyPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3EiPnE8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jY2l0ZSI+Y2l0ZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNkZm4iPmRmbjwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzdWIiPnN1Yiwgc3VwPC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICA8L3NlY3Rpb24+DQogICAgICAgIDwhLS0gZW5kIHNlY3Rpb24gLS0+DQogICAgICAgIDxzZWN0aW9uIGNsYXNzPSJnbG9zc2FyeS1sYXN0Ij4NCiAgICAgICAgICAgIDxoMj5UZXh0LWxldmVsIDI8L2gyPg0KICAgICAgICAgICAgPHVsIGNsYXNzPSJncm91cCI+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3RpbWUiPnRpbWU8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jY29kZSI+Y29kZTwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNrYmQiPmtiZDwvYT48L2xpPg0KICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbGVtZW50LWluZGV4LyNzYW1wIj5zYW1wPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3ZhciI+dmFyPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI21hcmsiPm1hcms8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYmRpIj5iZGk8L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYmRvIj5iZG88L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jcnVieSI+cnVieSwgcnQsIHJwPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3NwYW4iPnNwYW48L2E+PC9saT4NCiAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZWxlbWVudC1pbmRleC8jYnIiPmJyPC9hPjwvbGk+DQogICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2VsZW1lbnQtaW5kZXgvI3diciI+d2JyPC9hPjwvbGk+DQogICAgICAgICAgICA8L3VsPg0KICAgICAgICA8L3NlY3Rpb24+DQogICAgICAgIDwhLS0gZW5kIHNlY3Rpb24gLS0+DQogICAgPC9zZWN0aW9uPg0KICAgIDwhLS0gZW5kICNnbG9zc2FyeSAtLT4NCg0KDQogICAgPGRpdiBpZD0iZ3JpZC1saXN0IiBjbGFzcz0iZ3JpZC1saXN0Ij4NCiAgICAgICAgPHNlY3Rpb24gY2xhc3M9Im1haW4gZ3JvdXAiPg0KICAgICAgICAgIDxoMT48YSBocmVmPSIvYXJ0aWNsZS1hcmNoaXZlLyI+TW9yZSBQb3N0cyBmcm9tIEhUTUw1IERvY3RvcjwvYT48L2gxPg0KICAgICAgICAgIDwhLS0NCiAgICAgICAgICA8ZGl2IGlkPSJsYXlvdXQiPg0KICAgICAgICAgICAgICA8YnV0dG9uIGlkPSJncmlkIj5HcmlkPC9idXR0b24+DQogICAgICAgICAgICAgIDxidXR0b24gaWQ9Imxpc3QiIGNsYXNzPSJpbmFjdGl2ZSI+TGlzdDwvYnV0dG9uPg0KICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIC0tPg0KDQogICAgICAgICAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwb3N0Ij4NCiAgICAgICAgICAgIDxoZWFkZXI+DQogICAgICAgICAgICAgICAgPGgyPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vdGhlLXdvZXMtb2YtZGF0ZS1pbnB1dC8iPlRoZSB3b2VzIG9mIGRhdGUgaW5wdXQ8L2E+PC9oMj4NCiAgICAgICAgICAgICAgICA8c21hbGw+IDx0aW1lIGRhdGV0aW1lPSIyMDEwLTEyLTA4IiBwdWJkYXRlPkphbnVhcnkgMTl0aCwgMjAxNjwvdGltZT4gYnkgPGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9hdXRob3IvaWFuZC8iIHRpdGxlPSJQb3N0cyBieSBJYW4gRGV2bGluIiByZWw9ImF1dGhvciI+SWFuIERldmxpbjwvYT48L3NtYWxsPg0KICAgICAgICAgICAgPC9oZWFkZXI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeSI+DQogICAgICAgICAgICA8cD5PbmUgb2YgdGhlIG1hbnkgbmV3IGlucHV0IHR5cGVzIHRoYXQgSFRNTDUgaW50cm9kdWNlZCBpcyB0aGUgZGF0ZSBpbnB1dCB0eXBlIHdoaWNoLCBpbiB0aGVvcnksIHNob3VsZCBhbGxvdyBhIGRldmVsb3BlciB0byBwcm92aWRlIHRoZSB1c2VyIHdpdGggYSBzaW1wbGUsIHVzYWJsZSwgcmVjb2duaXNhYmxlIG1ldGhvZCBvZiBlbnRlcmluZyBhIGRhdGUgb24gYSB3ZWIgcGFnZS4gQnV0IHNhZGx5LCB0aGlzIGlucHV0IHR5cGUgaGFzIHlldCB0byByZWFjaCBpdHMgZnVsbCBwb3RlbnRpYWwuIEJyaWVmbHksIHRoZSBkYXRlIFsmaGVsbGlwO108L3A+CiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvYXJ0aWNsZT4NCiAgICAgICAgICA8IS0tIGVuZCAucG9zdCAtLT4NCiAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwb3N0Ij4NCiAgICAgICAgICAgIDxoZWFkZXI+DQogICAgICAgICAgICAgICAgPGgyPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vaHRtbC1kZXZlbG9wZXJzLXBsZWFzZS1jb25zaWRlci8iPkhUTUwgRGV2ZWxvcGVyczogUGxlYXNlIENvbnNpZGVyPC9hPjwvaDI+DQogICAgICAgICAgICAgICAgPHNtYWxsPiA8dGltZSBkYXRldGltZT0iMjAxMC0xMi0wOCIgcHViZGF0ZT5EZWNlbWJlciA5dGgsIDIwMTU8L3RpbWU+IGJ5IDxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vYXV0aG9yL3N0ZXZlZi8iIHRpdGxlPSJQb3N0cyBieSBTdGV2ZSBGYXVsa25lciIgcmVsPSJhdXRob3IiPlN0ZXZlIEZhdWxrbmVyPC9hPjwvc21hbGw+DQogICAgICAgICAgICA8L2hlYWRlcj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5Ij4NCiAgICAgICAgICAgIDxwPkFSSUEgaXMgYW4gYW1hemluZyB0ZWNobm9sb2d5LCBpdCBhbGxvd3MgZGV2ZWxvcGVycyB0byBhZGQgbWVhbmluZyB0byBtZWFuaW5nbGVzcyBIVE1MIG9yIG92ZXJyaWRlIG1lYW5pbmcgb24gSFRNTCB0aGF0IGlzIGJlaW5nIHJlcHVycG9zZWQgYW5kIHNvbWV0aW1lcyBtaXN1c2VkLCBzbyB0aGF0IHVzZXJzIHdobyByZWx5IHVwb24gdGhlIG1lYW5pbmcgb2YgSFRNTCwgYXMgaW1wbGVtZW50ZWQgaW4gYnJvd3NlcnMsIGNhbiB1bmRlcnN0YW5kIGFuZCBpbnRlcmFjdCB3aXRoIEhUTUwgVXNlciBJbnRlcmZhY2VzIHN1Y2Nlc3NmdWxseS48L3A+CiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICAgIDwvYXJ0aWNsZT4NCiAgICAgICAgICA8IS0tIGVuZCAucG9zdCAtLT4NCiAgICAgICAgICAgICAgICAgIDxhcnRpY2xlIGNsYXNzPSJwb3N0Ij4NCiAgICAgICAgICAgIDxoZWFkZXI+DQogICAgICAgICAgICAgICAgPGgyPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vb24taHRtbC1iZWx0cy1hbmQtYXJpYS1icmFjZXMvIj5PbiBIVE1MIGJlbHRzIGFuZCBBUklBIGJyYWNlcyAoVGhlIERlZmF1bHQgSW1wbGljaXQgQVJJQSBzZW1hbnRpY3MgdGhleSBkaWRuJiM4MjE3O3Qgd2FudCB5b3UgdG8ga25vdyBhYm91dCk8L2E+PC9oMj4NCiAgICAgICAgICAgICAgICA8c21hbGw+IDx0aW1lIGRhdGV0aW1lPSIyMDEwLTEyLTA4IiBwdWJkYXRlPkFwcmlsIDE0dGgsIDIwMTU8L3RpbWU+IGJ5IDxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vYXV0aG9yL3N0ZXZlZi8iIHRpdGxlPSJQb3N0cyBieSBTdGV2ZSBGYXVsa25lciIgcmVsPSJhdXRob3IiPlN0ZXZlIEZhdWxrbmVyPC9hPjwvc21hbGw+DQogICAgICAgICAgICA8L2hlYWRlcj4NCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVudHJ5Ij4NCiAgICAgICAgICAgIDxwPlRoZSBxdWVzdGlvbiBvZiB3aGV0aGVyIEhUTUwgZWxlbWVudHMgbmVlZCB0aGUgYWRkaXRpb24gb2YgQVJJQSByb2xlIGF0dGlidXRlcyB0byBleHBvc2UgdGhlaXIgc2VtYW50aWNzLCBpcyBvbmUgdGhhdCBzdXJmYWNlcyBvbiBhIHJlZ3VsYXIgYmFzaXMuIFRoZSBhbnN3ZXIgaXMgbWF5YmUgZm9yIGEgc3Vic2V0IG9mIGVsZW1lbnRzLCBidXQgaW5jcmVhc2luZ2x5IG5vLjwvcD4KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgIDwhLS0gZW5kIC5wb3N0IC0tPg0KICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9InBvc3QiPg0KICAgICAgICAgICAgPGhlYWRlcj4NCiAgICAgICAgICAgICAgICA8aDI+PGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9odG1sNS1jaGVjay1pdC1iZWZvcmUteW91LXdyZWNrLWl0LXdpdGgtbWlrZXRtLXNtaXRoLyI+SFRNTDUgJiM4MjExOyBDaGVjayBpdCBCZWZvcmUgeW91IFdyZWNrIGl0IHdpdGggTWlrZVt0bV0gU21pdGg8L2E+PC9oMj4NCiAgICAgICAgICAgICAgICA8c21hbGw+IDx0aW1lIGRhdGV0aW1lPSIyMDEwLTEyLTA4IiBwdWJkYXRlPkRlY2VtYmVyIDl0aCwgMjAxNDwvdGltZT4gYnkgPGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9hdXRob3Ivc3RldmVmLyIgdGl0bGU9IlBvc3RzIGJ5IFN0ZXZlIEZhdWxrbmVyIiByZWw9ImF1dGhvciI+U3RldmUgRmF1bGtuZXI8L2E+PC9zbWFsbD4NCiAgICAgICAgICAgIDwvaGVhZGVyPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPg0KICAgICAgICAgICAgPHA+VGhlIFczQyYjODIxNztzIE1pa2VbdG1dIFNtaXRoIChBS0EgQHNpZGVzaG93YmFya2VyKSBpcyB0aGUgbWFuIHdpdGggaGlzIGhlYWQgaW4gdGhlIFczQyB2YWxpZGF0aW9uIG1hcmt1cCBjaGVja2luZyB0b29sIHNvdXJjZSBjb2RlOyBoZSBtYWtlcyB0aGUgbWFnaWMgaGFwcGVuLsKgIFF1ZXN0aW9ucyB3ZXJlIGFza2VkIGZvciB0aGUgSFRNTDUgRG9jdG9yIHJlYWRlciYjODIxNztzIGRlbGlnaHQgYW5kIGVkaWZpY2F0aW9uLiBSdXNzaWFuIFRyYW5zbGF0aW9uOiDQndC1wqDQv9GA0L7QstC10YDQuNCyIEhUTUw1LdC60L7QtNCwLCDQvdC1wqDRgdGD0LnRgdGPINCywqDQstC+0LTRg8Kg4oCUINGBwqDQnNCw0LnQutC+0LzihKLCoNCh0LzQuNGC0L7QvCBGaXJzdCBvZmYgdGVsbCB1cyBhIGJpdCBhYm91dCB3aGF0IHlvdSBkbyBhbmQgWyZoZWxsaXA7XTwvcD4KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgIDwhLS0gZW5kIC5wb3N0IC0tPg0KICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9InBvc3QiPg0KICAgICAgICAgICAgPGhlYWRlcj4NCiAgICAgICAgICAgICAgICA8aDI+PGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS90aGUtcmlkZS10by01LyI+VGhlIHJpZGUgdG8gNTwvYT48L2gyPg0KICAgICAgICAgICAgICAgIDxzbWFsbD4gPHRpbWUgZGF0ZXRpbWU9IjIwMTAtMTItMDgiIHB1YmRhdGU+T2N0b2JlciAyOHRoLCAyMDE0PC90aW1lPiBieSA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL2F1dGhvci9zdGV2ZWYvIiB0aXRsZT0iUG9zdHMgYnkgU3RldmUgRmF1bGtuZXIiIHJlbD0iYXV0aG9yIj5TdGV2ZSBGYXVsa25lcjwvYT48L3NtYWxsPg0KICAgICAgICAgICAgPC9oZWFkZXI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeSI+DQogICAgICAgICAgICA8cD5Gb3J3YXJkcyBJbiByZWNlbnQgd2Vla3MgSSBjb250YWN0ZWQgYXJvdW5kIDQwIHBlb3BsZSwgYSBjcm9zcyBzZWN0aW9uIG9mIHRob3NlIHdobyBoYXZlIGJhbmdlZCBhd2F5IGF0LCBvciBiYW5nZWQgb24gYWJvdXQsIEhUTUw1LiBJIGFza2VkIHRoZW0gZm9yIHRoZWlyIHBlcnNwZWN0aXZlcyBvbiBIVE1MNSBiZWNvbWluZyBhIFczQyBSZWNvbW1lbmRhdGlvbi4gQmVsb3cgYXJlIHRoZSB3b3JkcyBvZiB0aGUgMjggcGVvcGxlIHdobyByZXNwb25kZWQsIHByZXR0eSBtdWNoIGluIHRoZSBvcmRlciB0aGV5IGhpdCBteSBpbmJveDogWyZoZWxsaXA7XTwvcD4KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgIDwhLS0gZW5kIC5wb3N0IC0tPg0KICAgICAgICAgICAgICAgICAgPGFydGljbGUgY2xhc3M9InBvc3QiPg0KICAgICAgICAgICAgPGhlYWRlcj4NCiAgICAgICAgICAgICAgICA8aDI+PGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS93ZWItbWFuaWZlc3Qtc3BlY2lmaWNhdGlvbi8iPlRoZSBXM0MgQXBwIE1hbmlmZXN0IHNwZWNpZmljYXRpb248L2E+PC9oMj4NCiAgICAgICAgICAgICAgICA8c21hbGw+IDx0aW1lIGRhdGV0aW1lPSIyMDEwLTEyLTA4IiBwdWJkYXRlPkp1bHkgMjl0aCwgMjAxNDwvdGltZT4gYnkgPGEgaHJlZj0iaHR0cDovL2h0bWw1ZG9jdG9yLmNvbS9hdXRob3IvYnJ1Y2VsLyIgdGl0bGU9IlBvc3RzIGJ5IEJydWNlIExhd3NvbiIgcmVsPSJhdXRob3IiPkJydWNlIExhd3NvbjwvYT48L3NtYWxsPg0KICAgICAgICAgICAgPC9oZWFkZXI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeSI+DQogICAgICAgICAgICA8cD5CeSBNYXJjb3MgQ8OhY2VyZXMgYW5kIEJydWNlIExhd3Nvbi4gVXBkYXRlIDI2IFNlcHRlbWJlciAyMDE0IFRoZSBpbml0aWFsIHdvcmsgZm9yIE1hbmlmZXN0IGluIENocm9taXVtIE0zOSBpcyBkb25lLCBhbmQgTWFyY29zIChtb3JlIG9yIGxlc3MpIGZpbmlzaGVkIGNvZGluZyB0aGUgcHJvY2Vzc29yIGEgZmV3IG1vbnRocyBhZ28uICYjODIyMDtJJiM4MjE3O20gaG9waW5nIHRvIHNlZSBpdCBpbiBmeG9zIDIuMiYjODIyMDssIGhlIHNhaWQgZnJvbSB0aGUgcG9vbCBvZiBoaXMgZ29yZ2VvdXMgTWFsaWJ1IGhvbWUuKSBVcGRhdGUgMTEgTm92ZW1iZXIgMjAxNCBbJmhlbGxpcDtdPC9wPgogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2FydGljbGU+DQogICAgICAgICAgPCEtLSBlbmQgLnBvc3QgLS0+DQogICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icG9zdCI+DQogICAgICAgICAgICA8aGVhZGVyPg0KICAgICAgICAgICAgICAgIDxoMj48YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3VzaW5nLWFyaWEtaW4taHRtbC8iPlVzaW5nIEFSSUEgaW4gSFRNTDwvYT48L2gyPg0KICAgICAgICAgICAgICAgIDxzbWFsbD4gPHRpbWUgZGF0ZXRpbWU9IjIwMTAtMTItMDgiIHB1YmRhdGU+SnVuZSAyMXN0LCAyMDE0PC90aW1lPiBieSA8YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL2F1dGhvci9zdGV2ZWYvIiB0aXRsZT0iUG9zdHMgYnkgU3RldmUgRmF1bGtuZXIiIHJlbD0iYXV0aG9yIj5TdGV2ZSBGYXVsa25lcjwvYT48L3NtYWxsPg0KICAgICAgICAgICAgPC9oZWFkZXI+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeSI+DQogICAgICAgICAgICA8cD5BUklBIChXQUktQVJJQSBpZiB5b3Ugd2FudCB0byBiZSBmb3JtYWwpIGlzIGEgc2V0IG9mIGF0dHJpYnV0ZXMgdGhhdCB5b3UgY2FuIGFkZCB0byBIVE1MIGVsZW1lbnRzLiBUaGVzZSBhdHRyaWJ1dGVzIGNvbW11bmljYXRlIHJvbGUsIHN0YXRlIGFuZCBwcm9wZXJ0eSBzZW1hbnRpY3MgdG8gYXNzaXN0aXZlIHRlY2hub2xvZ2llcyB2aWEgdGhlIGFjY2Vzc2liaWxpdHkgQVBJcyBpbXBsZW1lbnRlZCBpbiBicm93c2Vycy4gVGhlIFczQyBIVE1MIHNwZWNpZmljYXRpb24gcHJvdmlkZXMgaW5mb3JtYXRpb24gYWJvdXQgd2hpY2ggQVJJQSBhdHRyaWJ1dGVzIGFyZSBhbGxvd2VkIHRvIGJlIHVzZWQgb24gZWFjaCBbJmhlbGxpcDtdPC9wPgogICAgICAgICAgICA8L2Rpdj4NCiAgICAgICAgICA8L2FydGljbGU+DQogICAgICAgICAgPCEtLSBlbmQgLnBvc3QgLS0+DQogICAgICAgICAgICAgICAgICA8YXJ0aWNsZSBjbGFzcz0icG9zdCI+DQogICAgICAgICAgICA8aGVhZGVyPg0KICAgICAgICAgICAgICAgIDxoMj48YSBocmVmPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3Jlc3BvbnNpdmUtaW1hZ2VzLWVuZC1vZi15ZWFyLXJlcG9ydC8iPlJlc3BvbnNpdmUgaW1hZ2VzIOKAkyBlbmQgb2YgeWVhciByZXBvcnQ8L2E+PC9oMj4NCiAgICAgICAgICAgICAgICA8c21hbGw+IDx0aW1lIGRhdGV0aW1lPSIyMDEwLTEyLTA4IiBwdWJkYXRlPk5vdmVtYmVyIDEydGgsIDIwMTM8L3RpbWU+IGJ5IDxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vYXV0aG9yL2JydWNlbC8iIHRpdGxlPSJQb3N0cyBieSBCcnVjZSBMYXdzb24iIHJlbD0iYXV0aG9yIj5CcnVjZSBMYXdzb248L2E+PC9zbWFsbD4NCiAgICAgICAgICAgIDwvaGVhZGVyPg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPg0KICAgICAgICAgICAgPHA+SXTigJlzIG5lYXJseSB0d28geWVhcnMgc2luY2UgSSBzdWdnZXN0ZWQgYSAmbHQ7cGljdHVyZSZndDsgZWxlbWVudCBhcyBhIHN0cmF3bWFuIHByb3Bvc2FsIGFzIGEgd2F5IHRvIHNvbHZlIHRoZSBwcm9ibGVtIG9mIHJlc3BvbnNpdmUgaW1hZ2VzLCBzbyBsZXTigJlzIGhhdmUgYSBsb29rIGF0IGhvdyB3ZeKAmXJlIGRvaW5nLjwvcD4KICAgICAgICAgICAgPC9kaXY+DQogICAgICAgICAgPC9hcnRpY2xlPg0KICAgICAgICAgIDwhLS0gZW5kIC5wb3N0IC0tPg0KICAgICAgICANCiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibW9yZS1hcnRpY2xlcyBidG4iPjxhIGhyZWY9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vYXJ0aWNsZS1hcmNoaXZlLyIgdGl0bGU9IkFydGljbGUgQXJjaGl2ZSB8IEhUTUw1IERvY3RvciI+RmluZCBtb3JlIGFydGljbGVzIGluIHRoZSBjb21wbGV0ZSBIVE1MNSBEb2N0b3IgYXJjaGl2ZTwvYT48L3A+DQogICAgICAgIDwvc2VjdGlvbj4NCiAgICAgICAgPCEtLSBlbmQgLm1haW4gLS0+DQoNCiAgICAgICAgPGRpdiBjbGFzcz0ic2Vjb25kYXJ5Ij4NCgkJICAgICAgICAgICAgPGFzaWRlIGNsYXNzPSJtb2QgYWRzIGdyb3VwIj4NCiAgICAgICAgICAgICAgICA8aDM+U3BvbnNvcnM8L2gzPg0KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImJzYXBfMTI0MjkyOSIgY2xhc3M9ImJzYXJvY2tzIGJzYXBfYWIxNjFlMmJmNzFlZGI5NDBlZWNhMjZhNDczOWY1MjIiPjwvZGl2Pg0KICAgICAgICAgICAgPC9hc2lkZT4NCgkJICAgICAgICAgICAgICAgICAgICAgICA8IS0tIGVuZCBuYXYgLS0+Cg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPCEtLSBlbmQgc2VjdGlvbiAtLT4NCg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPCEtLSBlbmQgI2dyaWQtbGlzdCAtLT4NCgkNCgkNCiAgICAgICAgPGFzaWRlIGlkPSJzdWItZm9vdGVyIiBjbGFzcz0ic3ViLWZvb3RlciBncm91cCI+DQogICAgICAgIDxkaXY+DQogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2QgYWRzIj4NCiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwOi8vaHRtbDVnYWxsZXJ5LmNvbS8iPg0KICAgICAgICAgICAgICAgIDxoMz5IVE1MNSBHYWxsZXJ5PC9oMz4NCiAgICAgICAgICAgICAgICA8aW1nIGFsdD0iIiBzcmM9Imh0dHA6Ly9odG1sNWRvY3Rvci5jb20vd3AtY29udGVudC90aGVtZXMvaHRtbDVkb2N0b3IyL2ltYWdlcy90aGUtZ2FsbGVyeS5wbmciIC8+DQogICAgICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPC9kaXY+DQoJICAgIDxkaXYgY2xhc3M9Im1vZCI+DQogICAgICAgICAJPGgzPjxhIGhyZWY9Imh0dHA6Ly90aGV3ZWJldm9sdmVkLmNvbSI+QmVnaW5uaW5nIEhUTUw1ICZhbXA7IENTUzM8L2E+PC9oMz4gDQoJCTxhIGhyZWY9Imh0dHA6Ly90aGV3ZWJldm9sdmVkLmNvbSI+DQoJCQk8aW1nIGNsYXNzPSJib29rIiBzcmM9Ii93cC1jb250ZW50L3VwbG9hZHMvMjAxMy8wMS93ZWItZXZvbHZlZC5qcGciIGFsdD0iQ292ZXIgaW1hZ2Ugb2YgQmVnaW5uaW5nIEhUTUw1IGFuZCBDU1MzOiBUaGUgV2ViIEV2b2x2ZWQuIj4NCgkJPC9hPg0KCQk8cD5UaGUgV2ViIEV2b2x2ZWQ6IEEgbmV3IGJvb2sgb24gSFRNTDUgJmFtcDsgQ1NTMyBieSBSaWNoYXJkIENsYXJrLCBPbGkgU3R1ZGhvbG1lLCBDaHJpc3RvcGhlciBNdXJwaHkgYW5kIERpdnlhIE1hbmlhbi48L3A+DQoJCTxwPjxhIGNsYXNzPSJidG4iIGhyZWY9Imh0dHA6Ly90aGV3ZWJldm9sdmVkLmNvbSI+QnV5IGl0IG5vdzwvYT48L3A+DQogICAgICAgICAgICAgPC9kaXY+DQoJCQkgICAgICAgIDwvZGl2PiANCiAgICAgICAgPCEtLSBlbmQgZGl2IC0tPg0KICAgICAgICA8ZGl2Pg0KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kIj4NCiAgICAgICAgICAgICAgICA8aDM+PGEgaHJlZj0iaHR0cDovL2RpdmVpbnRvLmh0bWw1ZG9jdG9yLmNvbSI+RGl2ZSBpbnRvIEhUTUw1PC9hPjwvaDM+DQogICAgICAgICAgICAgICAgPHA+U2FkbHksIE1hcmsgUGlsZ3JpbSBoYXMgc3RvcHBlZCBtYWludGFpbmluZyB0aGlzIHByb2plY3QuIEFsb25nIHdpdGggb3RoZXIgbWVtYmVycyBvZiB0aGUgd2ViIGNvbW11bml0eSB3ZSB3YW50IHRvIHNlZSBpdCBjb250aW51ZS4gV2XigJlyZSBob3N0aW5nIGEgY29weSBhbmQgcGxhbiB0byBoZWxwIGtlZXAgaXQgdXAtdG8tZGF0ZS48L3A+DQoJCTxwIGNsYXNzPSJidG4iPjxhIGhyZWY9Imh0dHA6Ly9kaXZlaW50by5odG1sNWRvY3Rvci5jb20iPlJlYWQgRGl2ZSBpbnRvIEhUTUw1PC9hPjwvcD4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Rpdj4NCiAgICAgICAgPCEtLSBlbmQgZGl2IC0tPg0KICAgIDwvYXNpZGU+DQogICAgPCEtLSBlbmQgI3N1Yi1mb290ZXIgLS0+PC9tYWluPg0KPCEtLSBlbmQgI2NvbnRlbnQgLS0+DQoNCjxmb290ZXIgcm9sZT0iY29udGVudGluZm8iPg0KCTxkaXYgY2xhc3M9ImlubmVyIj4NCiAgICAJPGltZyB3aWR0aD0iNjQiIGhlaWdodD0iNjQiIGNsYXNzPSJ3M2MtbG9nbyIgYWx0PSJXM0MgSFRNTDUgbG9nbyAobm90IENTUzMhKSIgc3JjPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2h0bWw1ZG9jdG9yMi9pbWFnZXMvSFRNTDVfQmFkZ2VfNjQucG5nIj4NCgkJPHAgaWQ9ImNvcHlyaWdodCI+VGhpcyBzaXRlIGlzIGxpY2Vuc2VkIHVuZGVyIGEgPGEgaHJlZj0iaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMvMi4wL3VrLyIgcmVsPSJsaWNlbnNlIj5DcmVhdGl2ZSBDb21tb25zIEF0dHJpYnV0aW9uLU5vbi1Db21tZXJjaWFsIDIuMDwvYT4gc2hhcmUgYWxpa2UgbGljZW5zZS4gRmVlbCBmcmVlIHRvIGNoYW5nZSwgcmV1c2UgbW9kaWZ5IGFuZCBleHRlbmQgaXQuIFNvbWUgYXV0aG9ycyB3aWxsIHJldGFpbiB0aGVpciBjb3B5cmlnaHQgb24gY2VydGFpbiBhcnRpY2xlcy48L3A+DQogICAgICAgIDxwPkNvcHlyaWdodCAmY29weTsgMjAxNyBIVE1MNSBEb2N0b3IuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIEhvc3RlZCBieSA8YSBocmVmPSJodHRwOi8vd3d3Lm1lZGlhdGVtcGxlLm5ldC9nby9vcmRlci8/cmVmZG9tPXJpY2hjbGFya2Rlc2lnbi5jb20iPihtdCkgTWVkaWEgVGVtcGxlPC9hPi4gQnJhbmRpbmcgYnkgPGEgaHJlZj0iaHR0cDovL29saWsuY28udWsvIj5PbGl2ZXIgS2VyPC9hPi48L3A+DQoJPC9kaXY+DQogICAgPCEtLSBlbmQgLmlubmVyIC0tPg0KPC9mb290ZXI+DQo8IS0tIGVuZCBmb290ZXIgLS0+DQoNCiAgICA8IS0tIEJ1eVNlbGxBZHMuY29tIEFkIENvZGUgLS0+DQogICAgPHNjcmlwdD4NCiAgICAoZnVuY3Rpb24oKXsNCiAgICAgIHZhciBic2EgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsNCiAgICAgICAgIGJzYS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7DQogICAgICAgICBic2EuYXN5bmMgPSB0cnVlOw0KICAgICAgICAgYnNhLnNyYyA9ICcvL3MzLmJ1eXNlbGxhZHMuY29tL2FjL2JzYS5qcyc7DQogICAgICAoZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXXx8ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2JvZHknKVswXSkuYXBwZW5kQ2hpbGQoYnNhKTsNCiAgICB9KSgpOw0KICAgIDwvc2NyaXB0Pg0KICAgIDwhLS0gRU5EIEJ1eVNlbGxBZHMuY29tIEFkIENvZGUgLS0+DQo8c2NyaXB0IHNyYz0iaHR0cDovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjYvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+DQoJPCEtLSBUT0RPOiBtb3ZlIHNjcmlwdHMgaW4gaGVhZCB0byBiZWZvcmUgL2JvZHkg4oCUb2xpIC0tPg0KCSAgIA0KCTxzY3JpcHQgc3JjPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2h0bWw1ZG9jdG9yMi9qcy9zZWFyY2hoaS5qcyI+PC9zY3JpcHQ+ICAgIA0KCTxzY3JpcHQgc3JjPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2h0bWw1ZG9jdG9yMi9qcy9wcmV0dGlmeS5qcyI+PC9zY3JpcHQ+ICAgIA0KCTxzY3JpcHQgc3JjPSJodHRwOi8vaHRtbDVkb2N0b3IuY29tL3dwLWNvbnRlbnQvdGhlbWVzL2h0bWw1ZG9jdG9yMi9qcy9tYXN0ZXIuanMiPjwvc2NyaXB0PiAgICANCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCg0KICB2YXIgX2dhcSA9IF9nYXEgfHwgW107DQogIF9nYXEucHVzaChbJ19zZXRBY2NvdW50JywgJ1VBLTg5MTY2NzktMSddKTsNCiAgX2dhcS5wdXNoKFsnX3NldERvbWFpbk5hbWUnLCAnaHRtbDVkb2N0b3IuY29tJ10pOw0KICBfZ2FxLnB1c2goWydfdHJhY2tQYWdldmlldyddKTsNCg0KICAoZnVuY3Rpb24oKSB7DQogICAgdmFyIGdhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7IGdhLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsgZ2EuYXN5bmMgPSB0cnVlOw0KICAgIGdhLnNyYyA9ICgnaHR0cHM6JyA9PSBkb2N1bWVudC5sb2NhdGlvbi5wcm90b2NvbCA/ICdodHRwczovL3NzbCcgOiAnaHR0cDovL3d3dycpICsgJy5nb29nbGUtYW5hbHl0aWNzLmNvbS9nYS5qcyc7DQogICAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07IHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2EsIHMpOw0KICB9KSgpOw0KDQo8L3NjcmlwdD4NCjxzY3JpcHQgYXN5bmMgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii8vY2RuLmZhbmN5YmFyLm5ldC9hYy9mYW5jeWJhci5qcz96b25laWQ9MTUwMiZzZXJ2ZT1DNkFEVktFJnBsYWNlbWVudD1odG1sNWRvY3RvciIgaWQ9Il9mYW5jeWJhcl9qcyI+PC9zY3JpcHQ+DQo8L2JvZHk+DQo8L2h0bWw+",
        "ContentLength": -1,
        "TransferEncoding": [
          "chunked"
        ],
        "Trailer": null,
        "TLS": null
      },
      "ErrType": "",
      "ErrMsg": ""
    },
    {
      "Request": {
        "Method": "GET",
        "URL": {
          "Scheme": "http",
          "Opaque": "",
          "User": null,
          "Host": "html5doctor.com",
          "Path": "",
          "RawPath": "",
          "ForceQuery": false,
          "RawQuery": "",
          "Fragment": ""
        },
        "Header": {
          "Accept": [
            "*/*"
          ],
          "Range": [
            "bytes=0-0"
          ],
          "User-Agent": [
            "htmltest/dev"
          ]
        },
        "Body": ""
      },
      "Response": {
        "Status": "200 OK",
        "StatusCode": 200,
        "Proto": "HTTP/1.1",
        "ProtoMajor": 1,
        "ProtoMinor": 1,
        "Header": {
          "Connection": [
            "keep-alive"
          ],
          "Content-Type": [
            "text/html; charset=UTF-8"
          ],
          "Date": [
            "Sat, 27 Jan 2018 21:51:19 GMT"
          ],
          "Link": [
            "\u003chttp://html5doctor.com/wp-json/\u003e; rel=\"https://api.w.org/\""
          ],
          "Server": [
            "nginx"
          ],
          "Vary": [
            "Cookie"
          ],
          "X-Content-Type-Options": [
            "nosniff"
          ],
          "X-Frame-Options": [
            "SAMEORIGIN"
          ],
          "X-Sucuri-Cache": [
            "UPDATING"
          ],
          "X-Sucuri-Id": [
            "13010"
          ],
          "X-Xss-Protection": [
            "1; mode=block"
          ]
        },
        "Body": "",
        "ContentLength": -1,
        "TransferEncoding": [
          "chunked"
        ],
        "Trailer": null,
        "TLS": null
      },
      "ErrType": "",
      "ErrMsg": ""
    }
  ]
}